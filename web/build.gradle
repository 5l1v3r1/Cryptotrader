apply plugin: 'spring-boot'
apply plugin: 'docker'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-netflix:${theSpringCloudNetflixVersion}"
        mavenBom "io.spring.platform:platform-bom:${theSpringPlatformBomVersion}"
    }
}

configurations {
    compile {
        exclude module: 'jsr311-api'
    }
}

dependencies {

    //own projects
    compile project(":core")

    //web
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    compile 'org.springframework.boot:spring-boot-starter-websocket'


    //data
    compile("org.flywaydb:flyway-core")

    testCompile("com.h2database:h2")

    //cloud
    compile("org.springframework.boot:spring-boot-starter-cloud-connectors")

    //security
    compile("org.springframework.security:spring-security-data")
    compile("org.springframework.security:spring-security-web")
    compile("org.springframework.security:spring-security-config")
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
    testCompile("org.springframework.security:spring-security-test")

    //configuration
    compile("org.springframework.boot:spring-boot-starter-actuator")

    //utils
    compile('commons-validator:commons-validator:1.4.0')

    //testing
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.assertj:assertj-core:3.4.1'
}

jar {
    baseName = 'Cryptotrader'
    version = null
}

springBoot {
    executable = true
}

bootRun {
    systemProperties System.properties
    addResources = true
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = 'cryptotrader'
    tagVersion = 'latest'
    project.group = 'qkyrie'
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}